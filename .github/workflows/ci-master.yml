name: ci-master
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: sigstore/cosign-installer@main
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: environment
      run: >-
        APP_SHA=$(git rev-parse --short ${GITHUB_SHA});
        echo "APP_SHA=${APP_SHA}" >> ${GITHUB_ENV};
        APP_REV=$(git rev-list --tags --max-count=1);
        echo "APP_REV=${APP_REV}" >> ${GITHUB_ENV};
        APP_TAG=$(git describe --tags ${APP_REV} 2> /dev/null || echo 0.0.0);
        echo "APP_TAG=${APP_TAG}" >> ${GITHUB_ENV};
        VERSION=${APP_TAG}-${APP_SHA};
        echo "VERSION=${VERSION}" >> ${GITHUB_ENV};
    - name: docker build
      run: docker build
        --tag ghcr.io/${GITHUB_REPOSITORY}/cwa-quick-test-backend:latest
        --tag ghcr.io/${GITHUB_REPOSITORY}/cwa-quick-test-backend:${VERSION}
        --tag ${TRUSTED_URL}/${TRUSTED_REPOSITORY}/cwa-quick-test-backend:${VERSION}
        --build-arg MAVEN_PASSWORD=${APP_PACKAGES_PASSWORD}
        --build-arg MAVEN_USERNAME=${APP_PACKAGES_USERNAME}
        .
      env:
        TRUSTED_URL: ${{ secrets.TRUSTED_URL }}
        TRUSTED_REPOSITORY: ${{ secrets.TRUSTED_REPOSITORY }}
        APP_PACKAGES_USERNAME: ${{ github.actor }}
        APP_PACKAGES_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    - name: docker push github
      run: |
        echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY_OWNER} --password-stdin
        docker push ghcr.io/${GITHUB_REPOSITORY}/cwa-quick-test-backend:latest
        docker push ghcr.io/${GITHUB_REPOSITORY}/cwa-quick-test-backend:${VERSION}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: docker push trusted
      run: |
        echo ${TRUSTED_TOKEN} | docker login ${TRUSTED_URL} -u ${TRUSTED_USER} --password-stdin
        export DOCKER_CONTENT_TRUST=1
        export DOCKER_CONTENT_TRUST_SERVER=${TRUSTED_SERVER_URL}
        export DOCKER_CONTENT_TRUST_ROOT_PASSPHRASE=${TRUSTED_TOKEN}
        export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE=${TRUSTED_TOKEN}
        gpg --quiet --batch --yes --decrypt --passphrase=${TRUSTED_KEY} \
        --output trusted.key trusted.key.gpg
        chmod 600 trusted.key
        docker trust key load trusted.key --name user
        docker trust sign ${TRUSTED_URL}/${TRUSTED_REPOSITORY}/cwa-quick-test-backend:${VERSION}
        docker push ${TRUSTED_URL}/${TRUSTED_REPOSITORY}/cwa-quick-test-backend:${VERSION}
      env:
        TRUSTED_KEY: ${{ secrets.TRUSTED_KEY }}
        TRUSTED_URL: ${{ secrets.TRUSTED_URL }}
        TRUSTED_SERVER_URL: ${{ secrets.TRUSTED_SERVER_URL }}
        TRUSTED_REPOSITORY: ${{ secrets.TRUSTED_REPOSITORY }}
        TRUSTED_USER: ${{ secrets.TRUSTED_USER }}
        TRUSTED_TOKEN: ${{ secrets.TRUSTED_TOKEN }}
    - name: docker push new mtr
      run: |
        echo ${MTR_TOKEN} | docker login ${MTR_REPOSITORY} -u ${MTR_USER} --password-stdin
        docker push ${MTR_REPOSITORY}/cwa-quick-test-backend:${VERSION}
        cosign sign --key env://MTR_PRIVATE_KEY ${MTR_REPOSITORY}/cwa-quick-test-backend:${VERSION}
      env:
        MTR_REPOSITORY: ${{ secrets.MTR_REPOSITORY }}
        MTR_USER: ${{ secrets.MTR_USER }}
        MTR_TOKEN: ${{ secrets.MTR_TOKEN }}
        MTR_PRIVATE_KEY: ${{ secrets.MTR_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.MTR_PRIVATE_KEY_PASSWORD }}
