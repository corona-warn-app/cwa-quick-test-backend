{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8093",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/usermanagement/groups/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get Details of a group",
        "operationId": "getSubGroupDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Group is not in your subgroups",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakGroupDetails"
                }
              }
            }
          },
          "404": {
            "description": "Group Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakGroupDetails"
                }
              }
            }
          },
          "200": {
            "description": "Group Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakGroupDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "description": "Update a group within your root group",
        "operationId": "updateSubGroupDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakGroupDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Group is not in your root group."
          },
          "204": {
            "description": "Group Updated"
          },
          "404": {
            "description": "Group not found."
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "description": "Delete a group.",
        "operationId": "deleteSubGroupDetails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Containing the ID of the group which should be deleted",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakGroupId"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Group deleted."
          },
          "403": {
            "description": "Group is not in your root group."
          },
          "404": {
            "description": "Group not found."
          }
        }
      }
    },
    "/api/quicktest/{shortHash}/testResult": {
      "put": {
        "tags": [
          "quick-test-controller"
        ],
        "summary": "Updates the test result of a quicktest",
        "description": "Updates the test result of a quicktest",
        "operationId": "updateQuickTestStatus",
        "parameters": [
          {
            "name": "shortHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickTestUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Updating failed because of internal error."
          },
          "404": {
            "description": "Short Hash doesn't exists"
          },
          "204 ": {
            "description": "Update successful"
          }
        }
      }
    },
    "/api/quicktest/{shortHash}/personalData": {
      "put": {
        "tags": [
          "quick-test-controller"
        ],
        "summary": "Updates the test result of a quicktest",
        "description": "Updates the test result of a quicktest",
        "operationId": "updateQuickTestWithPersonalData",
        "parameters": [
          {
            "name": "shortHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickTestPersonalDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Updating failed because of internal error."
          },
          "404": {
            "description": "Short Hash doesn't exists"
          },
          "204 ": {
            "description": "Update successful"
          }
        }
      }
    },
    "/api/usermanagement/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get all users.",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "List with all users in your root group.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeycloakUserResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Create a new user within your root group",
        "operationId": "createNewUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakCreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid payload",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakUserResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with username already exists",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakUserResponse"
                }
              }
            }
          },
          "201": {
            "description": "User created and assigned to root group",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/usermanagement/groups": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get subgroups of currently logged in user",
        "operationId": "getSubGroups",
        "responses": {
          "200": {
            "description": "List of Groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeycloakGroupResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Create a new group within your root group",
        "operationId": "createSubGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakGroupDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Group with this name already exists"
          },
          "201": {
            "description": "Group Created"
          }
        }
      }
    },
    "/api/usermanagement/groups/{parentId}/users": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Add a user as children of a group. The user will be automatically removed from all other subgroups",
        "operationId": "addUserToGroup",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the parent group",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Containing the ID of the user which should be added to parent group",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakUserId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Group or User is not in your root group."
          },
          "404": {
            "description": "Group or User not found."
          },
          "204": {
            "description": "User assigned to group"
          }
        }
      }
    },
    "/api/usermanagement/groups/{parentId}/subgroups": {
      "post": {
        "tags": [
          "User Management"
        ],
        "description": "Add Group as children of another group",
        "operationId": "addSubGroup",
        "parameters": [
          {
            "name": "parentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the parent group",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Containing the ID of the group which should be added to parent group",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakGroupId"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Group is not in your root group."
          },
          "409": {
            "description": "A group with the name of the child group already exists in the parent's subgroups."
          },
          "204": {
            "description": "Group relation updated"
          },
          "404": {
            "description": "Group not found."
          }
        }
      }
    },
    "/api/quicktest": {
      "get": {
        "tags": [
          "quick-test-controller"
        ],
        "summary": "Get poc specific quicktests",
        "description": "Returns all found (pending) quicktests containing personal data for a specific poc",
        "operationId": "getQuickTestsForTenantIdAndPocId",
        "responses": {
          "500": {
            "description": "Query failed due to an internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestResponseList"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "quick-test-controller"
        ],
        "summary": "Creates a quicktest",
        "description": "Creates a quicktest and a pending testresult",
        "operationId": "createQuickTest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuickTestCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "500": {
            "description": "Inserting failed because of internal error."
          },
          "409": {
            "description": "Quicktest with short hash already exists"
          },
          "201": {
            "description": "Quicktest is created"
          }
        }
      }
    },
    "/api/usermanagement/users/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "description": "Get user details.",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object containing details of user.",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/KeycloakUserResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "description": "Delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "description": "ID of the User",
            "required": true
          }
        ],
        "responses": {
          "403": {
            "description": "User is not in your root group"
          },
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": [
          "User Management"
        ],
        "description": "Update a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "description": "ID of the User",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeycloakUpdateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "User updated"
          },
          "403": {
            "description": "User is not in your root group"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/quickteststatistics": {
      "get": {
        "tags": [
          "quick-test-statistics-controller"
        ],
        "summary": "Get quicktest statistics",
        "description": "Returns the statistics for total and positive counts (default for today)",
        "operationId": "getQuicktestStatistics",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Inserting failed because of internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestStatisticsResponse"
                }
              }
            }
          },
          "200": {
            "description": "Get statistic data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestStatisticsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/quickteststatistics/tenant": {
      "get": {
        "tags": [
          "quick-test-statistics-controller"
        ],
        "summary": "Get aggregated statistic data for tenant",
        "description": "Returns the aggregated statistics for tenant with total and positive counts",
        "operationId": "getQuicktestStatisticsForTenantWithAggregation",
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "aggregation",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "NONE",
                "HOUR",
                "DAY"
              ]
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Inserting failed because of internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestTenantStatisticsResponseList"
                }
              }
            }
          },
          "200": {
            "description": "Get aggregated statistic data for tenant",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestTenantStatisticsResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/quicktestarchive": {
      "get": {
        "tags": [
          "quick-test-archive-controller"
        ],
        "summary": "Find quicktests in archive",
        "description": "Returns all found quicktests in archive for search parameters",
        "operationId": "findArchivesByTestResultAndUpdatedAtBetween",
        "parameters": [
          {
            "name": "testResult",
            "in": "query",
            "required": false,
            "schema": {
              "maximum": 8,
              "minimum": 5,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestArchiveResponseList"
                }
              }
            }
          },
          "500": {
            "description": "Query failed because of an internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestArchiveResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/api/quicktestarchive/{hashedGuid}/pdf": {
      "get": {
        "tags": [
          "quick-test-archive-controller"
        ],
        "summary": "Response quicktest as PDF",
        "description": "PDF stored in DB will be responsed for download if found.",
        "operationId": "getQuickTestPdf",
        "parameters": [
          {
            "name": "hashedGuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Inserting failed because of internal error.",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          },
          "200": {
            "description": "PDF found",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Quicktest not found",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "byte"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/quicktest/{shortHash}": {
      "get": {
        "tags": [
          "quick-test-controller"
        ],
        "summary": "Updates the test result of a quicktest",
        "description": "Updates the test result of a quicktest",
        "operationId": "getDccConsent",
        "parameters": [
          {
            "name": "shortHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "internal error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestDccConsent"
                }
              }
            }
          },
          "200": {
            "description": "test found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestDccConsent"
                }
              }
            }
          },
          "404": {
            "description": "test not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestDccConsent"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/keycloak.json": {
      "get": {
        "tags": [
          "config-controller"
        ],
        "operationId": "getKeyCloakConfig",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyCloakConfigFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/config/context.json": {
      "get": {
        "tags": [
          "config-controller"
        ],
        "operationId": "getQuickTestContextFile",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuickTestContextFile"
                }
              }
            }
          }
        }
      }
    },
    "/api/antigentests": {
      "get": {
        "tags": [
          "antigen-test-controller"
        ],
        "summary": "Response antigen tests as JSON array",
        "operationId": "getAntigenTests",
        "responses": {
          "500": {
            "description": "Request failed due to an internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AntigenTest"
                  }
                }
              }
            }
          },
          "404": {
            "description": "antigen tests empty",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AntigenTest"
                  }
                }
              }
            }
          },
          "200": {
            "description": "antigen tests found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AntigenTest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "KeycloakGroupDetails": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Ignored when used for updating the group details"
          },
          "name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "pocDetails": {
            "maxLength": 300,
            "minLength": 0,
            "type": "string"
          },
          "pocId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "searchPortalConsent": {
            "type": "boolean"
          }
        },
        "description": "Request/Response model for group details."
      },
      "QuickTestUpdateRequest": {
        "type": "object",
        "properties": {
          "result": {
            "maximum": 8,
            "minimum": 6,
            "type": "integer",
            "format": "int32"
          },
          "testBrandId": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "testBrandName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "dccTestManufacturerId": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "dccTestManufacturerDescription": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          }
        },
        "description": "The quick test update."
      },
      "QuickTestPersonalDataRequest": {
        "required": [
          "birthday",
          "city",
          "confirmationCwa",
          "diseaseAgentTargeted",
          "firstName",
          "lastName",
          "phoneNumber",
          "privacyAgreement",
          "sex",
          "street",
          "zipCode"
        ],
        "type": "object",
        "properties": {
          "confirmationCwa": {
            "type": "boolean"
          },
          "privacyAgreement": {
            "type": "boolean"
          },
          "lastName": {
            "maxLength": 79,
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "maxLength": 79,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 255,
            "minLength": 5,
            "type": "string"
          },
          "phoneNumber": {
            "maxLength": 79,
            "minLength": 1,
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "DIVERSE"
            ]
          },
          "street": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "houseNumber": {
            "maxLength": 15,
            "minLength": 1,
            "type": "string"
          },
          "zipCode": {
            "maxLength": 5,
            "minLength": 5,
            "type": "string"
          },
          "city": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "standardisedFamilyName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "standardisedGivenName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "diseaseAgentTargeted": {
            "type": "string"
          },
          "testResultServerHash": {
            "type": "string"
          },
          "dccConsent": {
            "type": "boolean"
          },
          "additionalInfo": {
            "maxLength": 250,
            "minLength": 1,
            "type": "string"
          }
        },
        "description": "The quick test personaldata model."
      },
      "KeycloakCreateUserRequest": {
        "required": [
          "firstName",
          "lastName",
          "password",
          "roleCounter",
          "roleLab",
          "username"
        ],
        "type": "object",
        "properties": {
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 64,
            "minLength": 8,
            "type": "string"
          },
          "subGroup": {
            "maxLength": 36,
            "minLength": 36,
            "type": "string",
            "description": "ID of a subgroup to put user into. If not provided user will just put into root group."
          },
          "roleCounter": {
            "type": "boolean"
          },
          "roleLab": {
            "type": "boolean"
          }
        },
        "description": "Request model for user creation."
      },
      "KeycloakUserResponse": {
        "required": [
          "firstName",
          "lastName",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "roleCounter": {
            "type": "boolean"
          },
          "roleLab": {
            "type": "boolean"
          },
          "subGroup": {
            "type": "string"
          }
        },
        "description": "Response model for user."
      },
      "KeycloakUserId": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Request model for user id."
      },
      "KeycloakGroupId": {
        "required": [
          "groupId"
        ],
        "type": "object",
        "properties": {
          "groupId": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": "Request model for group id."
      },
      "QuickTestCreationRequest": {
        "required": [
          "hashedGuid"
        ],
        "type": "object",
        "properties": {
          "hashedGuid": {
            "type": "string"
          }
        },
        "description": "The quick test creation model."
      },
      "KeycloakUpdateUserRequest": {
        "type": "object",
        "properties": {
          "lastName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "password": {
            "maxLength": 64,
            "minLength": 8,
            "type": "string"
          },
          "roleCounter": {
            "type": "boolean"
          },
          "roleLab": {
            "type": "boolean"
          }
        },
        "description": "Request model for user update."
      },
      "KeycloakGroupResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeycloakGroupResponse"
            }
          }
        },
        "description": "Response model for group."
      },
      "QuickTestStatisticsResponse": {
        "type": "object",
        "properties": {
          "totalTestCount": {
            "type": "integer",
            "format": "int32"
          },
          "positiveTestCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "The quick test statistics model."
      },
      "QuickTestTenantStatisticsResponse": {
        "type": "object",
        "properties": {
          "aggregation": {
            "type": "string",
            "enum": [
              "NONE",
              "HOUR",
              "DAY"
            ]
          },
          "quickTestStatistics": {
            "$ref": "#/components/schemas/QuickTestStatisticsResponse"
          },
          "pocId": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "The quick test tenant statistics model."
      },
      "QuickTestTenantStatisticsResponseList": {
        "required": [
          "quickTestTenantStatistics"
        ],
        "type": "object",
        "properties": {
          "quickTestTenantStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickTestTenantStatisticsResponse"
            }
          }
        },
        "description": "The quick test tenant statistics model list."
      },
      "QuickTestArchiveResponse": {
        "type": "object",
        "properties": {
          "hashedGuid": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "DIVERSE"
            ]
          },
          "street": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "birthday": {
            "type": "string"
          },
          "testResult": {
            "type": "string"
          }
        },
        "description": "Response model for quick test archive entries."
      },
      "QuickTestArchiveResponseList": {
        "required": [
          "quickTestArchives"
        ],
        "type": "object",
        "properties": {
          "quickTestArchives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickTestArchiveResponse"
            }
          }
        }
      },
      "QuickTestResponse": {
        "type": "object",
        "properties": {
          "shortHashedGuid": {
            "type": "string"
          }
        },
        "description": "Model for quicktest response."
      },
      "QuickTestResponseList": {
        "required": [
          "quickTests"
        ],
        "type": "object",
        "properties": {
          "quickTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuickTestResponse"
            }
          }
        },
        "description": "Model for quicktest response list."
      },
      "QuickTestDccConsent": {
        "type": "object",
        "properties": {
          "dccConsent": {
            "type": "boolean"
          },
          "testResult": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KeyCloakConfigFile": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "auth-server-url": {
            "type": "string"
          },
          "ssl-required": {
            "type": "string"
          },
          "public-client": {
            "type": "boolean"
          }
        },
        "description": "Configuration Model for KeyCloak Clients"
      },
      "QuickTestContextFile": {
        "type": "object",
        "properties": {
          "rules-server-url": {
            "type": "string"
          },
          "environment-name": {
            "type": "string"
          }
        },
        "description": "Configuration Model for Context Configuration for Frontend"
      },
      "AntigenTest": {
        "type": "object",
        "properties": {
          "testBrandId": {
            "type": "string"
          },
          "testBrandName": {
            "type": "string"
          }
        }
      }
    }
  }
}